version: "2.1"
services:
  smd-ui:
    depends_on:
    - strato
    - strato_peer_1
    - strato_peer_2
    - bloch
    - cirrus
    environment:
    - STRATO_GS_MODE=${STRATO_GS_MODE}
    - STRATO_URL=${STRATO_URL}
    - BLOC_DOC_URL=${BLOC_DOC_URL}
    - BLOC_URL=${BLOC_URL}
    - CIRRUS_URL=${CIRRUS_URL}
    - NODE_NAME=${NODE_NAME}
    - STRATO_DOC_URL=${STRATO_DOC_URL}
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-smd-ui:b8d3708 
    restart: always
  bloch:
    depends_on:
    - strato
    - postgres
    environment:
    - cirrusurl=${cirrusurl}
    - pghost=${pghost}
    - pgpasswd=${pgpasswd}
    - pguser=${pguser}
    - ssl=${ssl}
    - stratoHost=${stratoHost}
    - stratourl=${stratourl}
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-bloch:latest
    ports:
    - 10001:8000
    restart: always
  redis:
    command: [redis-server, --appendonly, "yes"]
    image: redis:3.2
    ports:
    - 6379:6379
    restart: always
  cirrus:
    environment:
    - postgres_host=${cirrus_pg_host:-postgres}
    - postgres_password=${cirrus_pg_password}
    - postgres_port=${cirrus_pg_port:-5432}
    - postgres_user=${cirrus_pg_user:-postgres}
    - stratourl=${stratourl}
    - zookeeper_conn=${cirrus_zookeeper_conn}
    - postgres_db=${cirrus_pg_db:-cirrus}
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-cirrus:latest
    links:
    - strato:strato
    - postgres-cirrus:postgres
    restart: always
  strato:
    depends_on:
     postgres:
      condition: service_healthy
    environment:
    - miningAlgorithm=${miningAlgorithm}
    - miningThreads=${miningThreads}
    - networkID=${networkID}
    - statsEnable=${statsEnable}
    - statsHost=${statsHost}
    - blockTime=${blockTime}
    - genesis=${genesis}
    - minBlockDifficulty=${minBlockDifficulty}
    - genesisBlock=${genesisBlock}
    - lazyBlocks=${lazyBlocks}
    - statsFlush=${statsFlush}
    - backupblocks=${backupblocks}
    - evmTraceMode=${evmTraceMode}
    - useSyncMode=${useSyncMode}
    - addBootnodes=${addBootnodes}
    - redisBDBNumber=${redisBDBNumber}
    - statsSuffix=${statsSuffix}
    - statsPort=${statsPort}
    - statsPrefix=${statsPrefix}
    - debugFail=${debugFail}
    - evmDebugMode=${evmDebugMode}
    - noMinPeers=${noMinPeers:-false}
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-strato:latest
    links:
    - zookeeper
    - kafka
    - postgres
    - redis
    ports:
    - 30303:30303
    - 30303:30303/udp
    - 33000:3000
    restart: always

  strato_peer_1:
    depends_on:
     postgres:
      condition: service_healthy
    environment:
    - miningAlgorithm=${miningAlgorithm}
    - miningThreads=${miningThreads}
    - networkID=${networkID}
    - statsEnable=${statsEnable}
    - statsHost=${statsHost}
    - blockTime=${blockTime}
    - genesis=${genesis}
    - minBlockDifficulty=${minBlockDifficulty}
    - genesisBlock=${genesisBlock}
    - lazyBlocks=${lazyBlocks}
    - statsFlush=${statsFlush}
    - backupblocks=${backupblocks}
    - bootnode=${bootnode}
    - evmTraceMode=${evmTraceMode}
    - useSyncMode=${useSyncMode}
    - addBootnodes=${addBootnodes}
    - redisBDBNumber=${redisBDBNumber}
    - statsSuffix=${statsSuffix}
    - statsPort=${statsPort}
    - statsPrefix=${statsPrefix}
    - debugFail=${debugFail}
    - evmDebugMode=${evmDebugMode}
    - noMinPeers=${noMinPeers:-false}
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-strato:latest
    links:
    - zookeeper
    - kafka
    - postgres
    - redis
    ports:
    - 30304:30303
    - 30304:30303/udp
    - 33001:3000
    restart: always

  strato_peer_2:
    depends_on:
     postgres:
      condition: service_healthy
    environment:
    - miningAlgorithm=${miningAlgorithm}
    - miningThreads=${miningThreads}
    - networkID=${networkID}
    - statsEnable=${statsEnable}
    - statsHost=${statsHost}
    - blockTime=${blockTime}
    - genesis=${genesis}
    - minBlockDifficulty=${minBlockDifficulty}
    - genesisBlock=${genesisBlock}
    - lazyBlocks=${lazyBlocks}
    - statsFlush=${statsFlush}
    - backupblocks=${backupblocks}
    - bootnode=${bootnode}
    - evmTraceMode=${evmTraceMode}
    - useSyncMode=${useSyncMode}
    - addBootnodes=${addBootnodes}
    - redisBDBNumber=${redisBDBNumber}
    - statsSuffix=${statsSuffix}
    - statsPort=${statsPort}
    - statsPrefix=${statsPrefix}
    - debugFail=${debugFail}
    - evmDebugMode=${evmDebugMode}
    - noMinPeers=${noMinPeers:-false}
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-strato:latest
    links:
    - zookeeper
    - kafka
    - postgres
    - redis
    ports:
    - 30305:30303
    - 30305:30303/udp
    - 33002:3000
    restart: always
  postgres-cirrus:
    environment:
    - PG_ENV_POSTGRES_DB=cirrus
    - PG_ENV_POSTGRES_USER=postgres
    - POSTGRES_DB=cirrus
    - POSTGRES_USER=postgres
    image: postgres:9.6
    ports:
    - 5434:5432
  postgrest:
    environment:
    - PG_ENV_POSTGRES_HOST=postgres-cirrus
    - PG_ENV_POSTGRES_PASSWORD=
    - PG_ENV_POSTGRES_USER=postgres
    - PG_PORT_5432_TCP_PORT=5432
    - PG_ENV_POSTGRES_DB=cirrus
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-postgrest:latest
    ports:
    - 3001:3001
    restart: always
  postgres:
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-postgres:latest
    restart: always
    healthcheck:
     test: ["CMD-SHELL", "pg_isready"]
     interval: 10s
     timeout: 30s
     retries: 3
  nginx:
    depends_on:
    - bloch
    - cirrus
    - postgrest
    - smd-ui
    - strato
    environment:
    - authBasic=${authBasic}
    - blockTime=${blockTime}
    - uiPassword=${uiPassword}
    - ssl=${ssl}
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-nginx:latest
    ports:
    - 443:443
    - 80:80
    restart: always
  zookeeper:
    environment:
    - ZOO_MY_ID=1
    image: zookeeper:3.4.9
    ports:
    - 2181:2181
    restart: always
  blockapps-docs:
    environment:
    - API_URL=/strato-api/eth/v1.2/swagger.json
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-blockapps-docs:latest
    ports:
    - 8080:8080
    restart: always
  kafka:
    environment:
    - KAFKA_LOG_RETENTION_HOURS=2147483647
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_ADVERTISED_HOST_NAME=kafka
    - KAFKA_ADVERTISED_PORT=9092
    - KAFKA_DELETE_TOPIC_ENABLE=true
    - KAFKA_LOG_CLEANER_ENABLE=false
    image: registry-aws.blockapps.net:5000/blockapps-repo/silo-kafka:latest
    links:
    - zookeeper
    ports:
    - 9092:9092
    restart: always
